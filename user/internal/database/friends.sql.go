// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: friends.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const find_friends = `-- name: Find_friends :many
SELECT
CASE 
WHEN f.followed_by=$1 THEN f.followed
WHEN f.followed=$1 THEN f.followed
END AS friend, u.username
FROM friends f INNER JOIN users u ON friends= u.user_id
`

type Find_friendsRow struct {
	Friend   interface{}
	Username string
}

func (q *Queries) Find_friends(ctx context.Context, followedBy uuid.UUID) ([]Find_friendsRow, error) {
	rows, err := q.db.QueryContext(ctx, find_friends, followedBy)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Find_friendsRow
	for rows.Next() {
		var i Find_friendsRow
		if err := rows.Scan(&i.Friend, &i.Username); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
